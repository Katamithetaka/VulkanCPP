name: Deploy

on:
    push:
        branches:
            - main  
        tags:
            - '**'  
jobs:
    build-linux:
        runs-on: ubuntu-latest
    
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: true
            - name: Install dependencies
              run: |
                sudo apt update
                sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libwayland-dev libxkbcommon-dev
    
            - name: Install Vulkan SDK
              uses: humbletim/install-vulkan-sdk@v1.1.1
    
            - name: generate make files
              run: ./scripts/build-linux-gmake2.sh
    
            - name: make
              run: make

            - name: tar
              run: tar -czvf ./linux-latest.tar.gz bin/

            - name: Upload build artefact
              uses: actions/upload-artifact@v2
              with:
                name: build-ubuntu
                path: ./bin/linux/linux-latest.tar.gz
    
    build-windows:
        runs-on: windows-latest
          
        steps:
          - uses: actions/checkout@v3
            with:
              submodules: true
          
          - name: Add MSBuild to PATH
            uses: microsoft/setup-msbuild@v1.0.2
          
          - name: Install Vulkan SDK
            uses: humbletim/install-vulkan-sdk@v1.1.1
          
          - name: Compile Visual Studio project with MSBuild
            shell: cmd 
            run: ${{ '.\scripts\release.cmd' }}
            working-directory: "${{ github.workspace }}"

          # zip 
          - name: Zip
            run: Compress-Archive -Path bin -DestinationPath bin.zip

          - name: Upload build artefact
            id: artifact
            uses: actions/upload-artifact@v2
            with:
                name: build-windows
                path: ./windows-latest.zip

    

    deploy:
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        needs: [build-linux, build-windows]

        steps:
            - name: Get Artifact from build linux step
              id: linux-artifact
              uses: actions/download-artifact@v2
              with:
                  name: build-linux
                  path: ./bin/linux/linux-latest.tar.gz
            - name: Get Artifact from build windows step
              id: windows-artifact
              uses: actions/download-artifact@v2
              with:
                name: build-windows
                path: ./bin/windows/windows-latest.zip

            - name: Build Changelog
              id: github_release
              uses: mikepenz/release-changelog-builder-action@v4
              with:
                  commitMode: true
                  configurationJson: |
                    {
                      "template": "#{{CHANGELOG}}",
                      "categories": [
                        {
                            "title": "## Feature",
                            "labels": ["feat", "feature"]
                        },
                        {
                            "title": "## Fix",
                            "labels": ["fix", "bug"]
                        },
                        {
                            "title": "## Other",
                            "labels": []
                        }
                      ],
                      "label_extractor": [
                        {
                          "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                          "target": "$1"
                        }
                      ],
                    }
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
            - name: Release
              uses: softprops/action-gh-release@v2
              with:
                body: ${{ steps.github_release.outputs.changelog}}
                files: |
                    ${{ steps.linux-artifact.outputs.download-path }}
                    ${{ steps.windows-artifact.outputs.download-path }}



